@model List<CourseEvaluationSystem.Models.ViewModels.CourseSummaryViewModel>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Utvärderingsöversikt";

    var selectedCourseId = Context.Request.Query["courseId"].ToString();
    var fromDate = Context.Request.Query["fromDate"].ToString();
    var toDate = Context.Request.Query["toDate"].ToString();

    var courseList = ViewBag.Courses as SelectList;
}

<h2 class="mt-4 mb-4 text-primary">Utvärderingsöversikt</h2>

<form method="get" asp-controller="Admin" asp-action="Index" class="mb-4">
    <div class="row g-2 align-items-end">
        <div class="col-md-4">
            <label for="courseId" class="form-label">Filtrera efter kurs:</label>
            <select id="courseId" name="courseId" class="form-select">
                <option value="">Alla kurser</option>
                @if (courseList != null)
                {
                    foreach (var c in courseList)
                    {
                        var sel = selectedCourseId == c.Value ? "selected" : null;
                        <option value="@c.Value" selected="@sel">@c.Text</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-3">
            <label for="fromDate" class="form-label">Från datum:</label>
            <input type="date" id="fromDate" name="fromDate" class="form-control" value="@fromDate" />
        </div>

        <div class="col-md-3">
            <label for="toDate" class="form-label">Till datum:</label>
            <input type="date" id="toDate" name="toDate" class="form-control" value="@toDate" />
        </div>

        <div class="col-md-auto pt-2">
            <button type="submit" class="btn btn-primary mt-4">Filtrera</button>
        </div>
    </div>
</form>

@if (!string.IsNullOrEmpty(selectedCourseId) || !string.IsNullOrEmpty(fromDate) || !string.IsNullOrEmpty(toDate))
{
    <div class="alert alert-info mb-4">
        <strong>Aktivt filter:</strong>
        @if (!string.IsNullOrEmpty(selectedCourseId) && courseList != null)
        {
            var selected = courseList.FirstOrDefault(c => c.Value == selectedCourseId);
            <span>Kurs: <em>@selected?.Text</em></span>
        }
        @if (!string.IsNullOrEmpty(fromDate))
        {
            <span class="ms-3">Från: <em>@fromDate</em></span>
        }
        @if (!string.IsNullOrEmpty(toDate))
        {
            <span class="ms-3">Till: <em>@toDate</em></span>
        }
    </div>
}

@if (Model != null && Model.Any())
{
    @foreach (var course in Model)
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-header bg-light">
                <h4 class="my-1">@course.Course</h4>
            </div>
            <div class="card-body">
                <p><strong>Genomsnittligt betyg:</strong> @course.AverageRating.ToString("0.0")</p>

                <h6 class="text-muted">Kommentarer:</h6>
                @if (course.Comments != null && course.Comments.Any())
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var comment in course.Comments)
                        {
                            <li class="list-group-item">@comment</li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">Inga kommentarer än.</p>
                }
            </div>
        </div>
    }
}
else
{
    <p class="text-muted">Inga kurser matchar det valda filtret.</p>
}
